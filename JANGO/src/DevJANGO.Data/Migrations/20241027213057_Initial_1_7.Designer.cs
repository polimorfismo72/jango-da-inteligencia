// <auto-generated />
using System;
using DevJANGO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevJANGO.Data.Migrations
{
    [DbContext(typeof(JangoDbContext))]
    [Migration("20241027213057_Initial_1_7")]
    partial class Initial_1_7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("MinhaSequencia");

            modelBuilder.Entity("DevJANGO.Business.Models.AlunoInscrito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlunoInterno")
                        .HasColumnType("bit");

                    b.Property<string>("AnoLetivo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<Guid>("AreaDeConhecimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR MinhaSequencia");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datanascimento")
                        .HasColumnType("datetime");

                    b.Property<Guid>("EncarregadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EscolaDeOrgigem")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("FuncionarioCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrauDeParentescoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("NiveisDeEnsinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NomeDaMae")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NomeDoPai")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NumDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("Sexo")
                        .HasColumnType("bit");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDaInscricao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AreaDeConhecimentoId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("EncarregadoId");

                    b.HasIndex("FuncionarioCaixaId");

                    b.HasIndex("GrauDeParentescoId");

                    b.HasIndex("NiveisDeEnsinoId");

                    b.ToTable("AlunoInscritos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AlunoMatriculado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoInscritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoLetivo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CodigoAluno")
                        .HasColumnType("int");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EncarregadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("FuncionarioCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrauDeParentescoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("NiveisDeEnsinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NumDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("Sexo")
                        .HasColumnType("bit");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorDaMatricula")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoInscritoId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("CursoId");

                    b.HasIndex("EncarregadoId");

                    b.HasIndex("FuncionarioCaixaId");

                    b.HasIndex("GrauDeParentescoId");

                    b.HasIndex("NiveisDeEnsinoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("AlunoMatriculados", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AplicaMulta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AplicaMultas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AreaDeConhecimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("AreaDeConhecimentos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Avaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoMatriculadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoLetivo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(2.2)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoAvaliacaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TrimestreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlunoMatriculadoId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("TipoAvaliacaoId");

                    b.HasIndex("TrimestreId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Avaliacaos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Classe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ClassDeExame")
                        .HasColumnType("bit");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NiveisDeEnsinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("PrecoPropina")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("NiveisDeEnsinoId");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NiveisDeEnsinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeDisciplina")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("NiveisDeEnsinoId");

                    b.ToTable("Disciplinas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Encarregado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Proficao")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Encarregados", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.FuncionarioCaixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("FuncionarioCaixas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.GrauDeParentesco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeGrauParentesco")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("GrauDeParentescos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Mes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CodMes")
                        .HasColumnType("int");

                    b.Property<string>("NomeMes")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Meses", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Multa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoMatriculadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoLetivo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoMulta")
                        .IsRequired()
                        .HasColumnType("varchar(29)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrecoPropina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlunoMatriculadoId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("MesId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Multas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.NiveisDeEnsino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeNiveisDeEnsino")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("NiveisDeEnsinos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoMulta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoMatriculadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR MinhaSequencia");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoMatriculadoId");

                    b.ToTable("PagamentoMultas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoMultaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeMulta")
                        .IsRequired()
                        .HasColumnType("varchar(29)");

                    b.Property<Guid>("PagamentoMultaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrecoMulta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioCaixaId");

                    b.HasIndex("MultaId");

                    b.HasIndex("PagamentoMultaId");

                    b.ToTable("PagamentoMultaItems", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoPropina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoMatriculadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR MinhaSequencia");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<Guid>("FuncionarioCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumeroDeMeses")
                        .HasColumnType("int");

                    b.Property<bool>("PagamentoMaticula")
                        .HasColumnType("bit");

                    b.Property<decimal>("PrecoPropina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoMatriculadoId");

                    b.HasIndex("FuncionarioCaixaId");

                    b.ToTable("PagamentoPropinas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoMatriculadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR MinhaSequencia");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperacaoPedidos")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoMatriculadoId");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FuncionarioCaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioCaixaId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItems", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR MinhaSequencia");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorVenda")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BI")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(254)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Professores", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.ProfessorDisciplinaClasse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoLetivo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DisciplinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeClasse")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NomeDisciplina")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<Guid>("ProfessorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("ProfessorDisciplinaClasses", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Propina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoMatriculadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnoLetivo")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoPropina")
                        .IsRequired()
                        .HasColumnType("varchar(29)");

                    b.Property<Guid>("MesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PagamentoPropinaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrecoPropina")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlunoMatriculadoId");

                    b.HasIndex("ClasseId");

                    b.HasIndex("MesId");

                    b.HasIndex("PagamentoPropinaId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Propinas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.TipoAvaliacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.HasKey("Id");

                    b.ToTable("TipoAvaliacaos", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Trimestre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Trimestres", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AreaDeConhecimentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClasseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("NomeTurma")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("NumDeVagas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaDeConhecimentoId");

                    b.HasIndex("ClasseId");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AlunoInscrito", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AreaDeConhecimento", "AreaDeConhecimento")
                        .WithMany("AlunoInscritos")
                        .HasForeignKey("AreaDeConhecimentoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany("AlunoInscritos")
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Encarregado", "Encarregado")
                        .WithMany("AlunoInscritos")
                        .HasForeignKey("EncarregadoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.FuncionarioCaixa", "FuncionarioCaixa")
                        .WithMany("AlunoInscritos")
                        .HasForeignKey("FuncionarioCaixaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.GrauDeParentesco", "GrauDeParentesco")
                        .WithMany("AlunoInscritos")
                        .HasForeignKey("GrauDeParentescoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.NiveisDeEnsino", "NiveisDeEnsino")
                        .WithMany("AlunoInscritos")
                        .HasForeignKey("NiveisDeEnsinoId")
                        .IsRequired();

                    b.Navigation("AreaDeConhecimento");

                    b.Navigation("Classe");

                    b.Navigation("Encarregado");

                    b.Navigation("FuncionarioCaixa");

                    b.Navigation("GrauDeParentesco");

                    b.Navigation("NiveisDeEnsino");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AlunoMatriculado", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoInscrito", "AlunoInscrito")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("AlunoInscritoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Curso", "Curso")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("CursoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Encarregado", "Encarregado")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("EncarregadoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.FuncionarioCaixa", "FuncionarioCaixa")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("FuncionarioCaixaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.GrauDeParentesco", "GrauDeParentesco")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("GrauDeParentescoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.NiveisDeEnsino", "NiveisDeEnsino")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("NiveisDeEnsinoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Turma", "Turma")
                        .WithMany("AlunoMatriculados")
                        .HasForeignKey("TurmaId")
                        .IsRequired();

                    b.Navigation("AlunoInscrito");

                    b.Navigation("Classe");

                    b.Navigation("Curso");

                    b.Navigation("Encarregado");

                    b.Navigation("FuncionarioCaixa");

                    b.Navigation("GrauDeParentesco");

                    b.Navigation("NiveisDeEnsino");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Avaliacao", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoMatriculado", "AlunoMatriculado")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("AlunoMatriculadoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Disciplina", "Disciplina")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("DisciplinaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Professor", "Professor")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("ProfessorId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.TipoAvaliacao", "TipoAvaliacao")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("TipoAvaliacaoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Trimestre", "Trimestre")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("TrimestreId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Turma", "Turma")
                        .WithMany("Avaliacaos")
                        .HasForeignKey("TurmaId")
                        .IsRequired();

                    b.Navigation("AlunoMatriculado");

                    b.Navigation("Classe");

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");

                    b.Navigation("TipoAvaliacao");

                    b.Navigation("Trimestre");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Classe", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.Curso", "Curso")
                        .WithMany("Classes")
                        .HasForeignKey("CursoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.NiveisDeEnsino", "NiveisDeEnsino")
                        .WithMany("Classes")
                        .HasForeignKey("NiveisDeEnsinoId")
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("NiveisDeEnsino");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Disciplina", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.NiveisDeEnsino", "NiveisDeEnsino")
                        .WithMany("Disciplinas")
                        .HasForeignKey("NiveisDeEnsinoId")
                        .IsRequired();

                    b.Navigation("NiveisDeEnsino");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Multa", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoMatriculado", "AlunoMatriculado")
                        .WithMany("Multas")
                        .HasForeignKey("AlunoMatriculadoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Mes", "Mes")
                        .WithMany("Multas")
                        .HasForeignKey("MesId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .IsRequired();

                    b.Navigation("AlunoMatriculado");

                    b.Navigation("Classe");

                    b.Navigation("Mes");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoMulta", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoMatriculado", "AlunoMatriculado")
                        .WithMany("PagamentoMultas")
                        .HasForeignKey("AlunoMatriculadoId")
                        .IsRequired();

                    b.Navigation("AlunoMatriculado");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoMultaItem", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.FuncionarioCaixa", "FuncionarioCaixa")
                        .WithMany("PagamentoMultaItems")
                        .HasForeignKey("FuncionarioCaixaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Multa", "Multa")
                        .WithMany()
                        .HasForeignKey("MultaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.PagamentoMulta", "PagamentoMulta")
                        .WithMany()
                        .HasForeignKey("PagamentoMultaId")
                        .IsRequired();

                    b.Navigation("FuncionarioCaixa");

                    b.Navigation("Multa");

                    b.Navigation("PagamentoMulta");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoPropina", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoMatriculado", "AlunoMatriculado")
                        .WithMany("PagamentoPropinas")
                        .HasForeignKey("AlunoMatriculadoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.FuncionarioCaixa", "FuncionarioCaixa")
                        .WithMany("PagamentoPropinas")
                        .HasForeignKey("FuncionarioCaixaId")
                        .IsRequired();

                    b.Navigation("AlunoMatriculado");

                    b.Navigation("FuncionarioCaixa");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Pedido", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoMatriculado", "AlunoMatriculado")
                        .WithMany("Pedidos")
                        .HasForeignKey("AlunoMatriculadoId")
                        .IsRequired();

                    b.Navigation("AlunoMatriculado");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PedidoItem", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.FuncionarioCaixa", "FuncionarioCaixa")
                        .WithMany("PedidoItems")
                        .HasForeignKey("FuncionarioCaixaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Pedido", "Pedido")
                        .WithMany("PedidoItems")
                        .HasForeignKey("PedidoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Produto", "Produto")
                        .WithMany("PedidoItems")
                        .HasForeignKey("ProdutoId")
                        .IsRequired();

                    b.Navigation("FuncionarioCaixa");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.ProfessorDisciplinaClasse", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany("ProfessorDisciplinaClasses")
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Disciplina", "Disciplina")
                        .WithMany("ProfessorDisciplinaClasses")
                        .HasForeignKey("DisciplinaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Professor", "Professor")
                        .WithMany("ProfessorDisciplinaClasses")
                        .HasForeignKey("ProfessorId")
                        .IsRequired();

                    b.Navigation("Classe");

                    b.Navigation("Disciplina");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Propina", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AlunoMatriculado", "AlunoMatriculado")
                        .WithMany("Propinas")
                        .HasForeignKey("AlunoMatriculadoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany("Propinas")
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Mes", "Mes")
                        .WithMany("Propinas")
                        .HasForeignKey("MesId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.PagamentoPropina", "PagamentoPropina")
                        .WithMany("Propinas")
                        .HasForeignKey("PagamentoPropinaId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Turma", "Turma")
                        .WithMany("Propinas")
                        .HasForeignKey("TurmaId")
                        .IsRequired();

                    b.Navigation("AlunoMatriculado");

                    b.Navigation("Classe");

                    b.Navigation("Mes");

                    b.Navigation("PagamentoPropina");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Turma", b =>
                {
                    b.HasOne("DevJANGO.Business.Models.AreaDeConhecimento", "AreaDeConhecimento")
                        .WithMany("Turmas")
                        .HasForeignKey("AreaDeConhecimentoId")
                        .IsRequired();

                    b.HasOne("DevJANGO.Business.Models.Classe", "Classe")
                        .WithMany("Turmas")
                        .HasForeignKey("ClasseId")
                        .IsRequired();

                    b.Navigation("AreaDeConhecimento");

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AlunoInscrito", b =>
                {
                    b.Navigation("AlunoMatriculados");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AlunoMatriculado", b =>
                {
                    b.Navigation("Avaliacaos");

                    b.Navigation("Multas");

                    b.Navigation("PagamentoMultas");

                    b.Navigation("PagamentoPropinas");

                    b.Navigation("Pedidos");

                    b.Navigation("Propinas");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.AreaDeConhecimento", b =>
                {
                    b.Navigation("AlunoInscritos");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Classe", b =>
                {
                    b.Navigation("AlunoInscritos");

                    b.Navigation("AlunoMatriculados");

                    b.Navigation("Avaliacaos");

                    b.Navigation("ProfessorDisciplinaClasses");

                    b.Navigation("Propinas");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Curso", b =>
                {
                    b.Navigation("AlunoMatriculados");

                    b.Navigation("Classes");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Disciplina", b =>
                {
                    b.Navigation("Avaliacaos");

                    b.Navigation("ProfessorDisciplinaClasses");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Encarregado", b =>
                {
                    b.Navigation("AlunoInscritos");

                    b.Navigation("AlunoMatriculados");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.FuncionarioCaixa", b =>
                {
                    b.Navigation("AlunoInscritos");

                    b.Navigation("AlunoMatriculados");

                    b.Navigation("PagamentoMultaItems");

                    b.Navigation("PagamentoPropinas");

                    b.Navigation("PedidoItems");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.GrauDeParentesco", b =>
                {
                    b.Navigation("AlunoInscritos");

                    b.Navigation("AlunoMatriculados");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Mes", b =>
                {
                    b.Navigation("Multas");

                    b.Navigation("Propinas");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.NiveisDeEnsino", b =>
                {
                    b.Navigation("AlunoInscritos");

                    b.Navigation("AlunoMatriculados");

                    b.Navigation("Classes");

                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.PagamentoPropina", b =>
                {
                    b.Navigation("Propinas");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Pedido", b =>
                {
                    b.Navigation("PedidoItems");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Produto", b =>
                {
                    b.Navigation("PedidoItems");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Professor", b =>
                {
                    b.Navigation("Avaliacaos");

                    b.Navigation("ProfessorDisciplinaClasses");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.TipoAvaliacao", b =>
                {
                    b.Navigation("Avaliacaos");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Trimestre", b =>
                {
                    b.Navigation("Avaliacaos");
                });

            modelBuilder.Entity("DevJANGO.Business.Models.Turma", b =>
                {
                    b.Navigation("AlunoMatriculados");

                    b.Navigation("Avaliacaos");

                    b.Navigation("Propinas");
                });
#pragma warning restore 612, 618
        }
    }
}
